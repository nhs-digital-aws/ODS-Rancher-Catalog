version: '2'
services:
  TLS-Service:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      service_name: Tls-Service
      project.service.name: tls-service
      project.name: cis-auth
      project.stack: auth
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      environment_name: ${env_shortcode}
      service_name: $${service_name}
    image: ${registry_url}/auth-httpd:${auth_version}
    tty: true
    stdin_open: true
    environment:
      INTERNAL_LB: LB-AuthBusinessService:8080
      REDIS_INSTANCE: redis.cis-externals.rancher.internal:6379
      LDAP_ROLE_LOCATION: ${directoryServer}
      LDAP_ROLE_USERNAME: ${ldap_role_username}
      LDAP_ROLE_PASSWORD: ${ldap_role_password}
      LDAP_AUTH_LOCATION: ${directoryServer}
      LDAP_AUTH_USERNAME: ${ldap_auth_username}
      LDAP_AUTH_PASSWORD: ${ldap_auth_password}
      CRL_LOCATION: 10.196.94.238
      ATN_FQDN: gas.${fqdn}
      AUTH_SERVERID: 192.168.118.105
      WFE_FQDN: wfe.${fqdn}
      PORTAL_FQDN: portal.${fqdn}
      PORTAL_COOKIE_DOMAIN: ${portal_cookie_domain}
#      AUDIT_DB: ${auditDatabaseServer}
      OUT_HOST:
      OUT_HOST_ENABLED: false
      CRL_FILE: IAM_crlfile.crl
      AUTH_SERVICE_SUBJECT: ${auth_service_subject}
      CRL_FILENAME: ${auth_crl_file1}
      CRL_FILENAME2: ${auth_crl_file2}
      CRL_FILENAME3: ${auth_crl_file3}
      ENV_SHORTCODE: ${env_shortcode}

  LB-AuthBusinessService:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: LB-AuthBusinessService
      project.service.name: lb-auth-business-service
      project.name: cis-auth
      project.stack: auth
    tty: true
    image: rancher/lb-service-haproxy:v0.7.15
    stdin_open: true

  AuditService:
    labels:
      io.rancher.container.pull_image: always
      project.service.name: audit-service
      project.name: cis-auth
      project.stack: auth
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      environment_name: ${env_shortcode}
      service_name: $${service_name}
      io.rancher.scheduler.affinity:host_label: stackType=auth
    mem_limit: 1572864000
    volumes:
    - /var/log/iam:/var/log/iam
  #  - /home/rancher/env_config/${env_shortcode}/authServices.properties:/home/iam_user/careidconfig/authServices.properties
    tty: true
    stdin_open: true
    image: ${registry_url}/auth-audit:${auth_version}
    environment:
      ENV_SHORTCODE: ${env_shortcode}
      JAVA_OPTS: -server -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=2 -Xms1024m -Xmx6144m

  AuthenticatorService:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      environment_name: ${env_shortcode}
      service_name: Authenticator
      project.service.name: authenticator-service
      project.name: cis-auth
      project.stack: auth
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      environment_name: ${env_shortcode}
      service_name: $${service_name}
      io.rancher.scheduler.affinity:host_label: stackType=auth
    mem_limit: 1572864000
    volumes:
    - /var/log/iam:/var/log/iam
  #  - /home/rancher/env_config/${env_shortcode}/authServices.properties:/home/iam_user/careidconfig/authServices.properties
    tty: true
    stdin_open: true
    privileged: true
    environment:
      CRL_FILENAME: ${auth_crl_file1}
      CRL_FILENAME2: ${auth_crl_file2}
      CRL_FILENAME3: ${auth_crl_file3}
      KEY_MATERIAL: YES
      ENV_SHORTCODE: ${env_shortcode}
      JAVA_OPTS: -server -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=2 -Xms1024m -Xmx6144m
    image: ${registry_url}/auth-authenticator:${auth_version}
    tty: true
    stdin_open: true

  SessionManager:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.hostname_override: container_name
      environment_name: ${env_shortcode}
      service_name: SessionManager
      project.service.name: session-manager
      project.name: cis-auth
      project.stack: auth
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      environment_name: ${env_shortcode}
      service_name: $${service_name}
      io.rancher.scheduler.affinity:host_label: stackType=auth
    mem_limit: 1572864000
    volumes:
    - /var/log/iam:/var/log/iam
  #  - /home/rancher/env_config/${env_shortcode}/authServices.properties:/home/iam_user/careidconfig/authServices.properties
    tty: true
    stdin_open: true
    privileged: true
    environment:
      JAVA_OPTS: -server -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=2 -Xms1024m -Xmx6144m
      ENV_SHORTCODE: ${env_shortcode}
      GLUSTER_URL: ${gluster_url}
      GLUSTER_FOLDER: ${env_shortcode}
    image: ${registry_url}/auth-sessionmanager:${auth_version}
    tty: true
    stdin_open: true
    external_links:
    - cis-externals/Redis:RedisSessionStore

  SAMLService:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.hostname_override: container_name
      environment_name: ${env_shortcode}
      service_name: SAMLService
      project.service.name: saml-service
      project.name: cis-auth
      project.stack: auth
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      environment_name: ${env_shortcode}
      service_name: $${service_name}
      io.rancher.scheduler.affinity:host_label: stackType=auth
    mem_limit: 1572864000
    volumes:
    - /var/log/iam:/var/log/iam
  #  - /home/rancher/env_config/${env_shortcode}/authServices.properties:/home/iam_user/careidconfig/authServices.properties
    tty: true
    stdin_open: true
    image: ${registry_url}/auth-saml:${auth_version}
    environment:
      ENV_SHORTCODE: ${env_shortcode}
      JAVA_OPTS: -server -Xms256m -Xmx256m  -XX:NewSize=128m   -XX:MaxNewSize=256m   -XX:PermSize=64m  -XX:MaxPermSize=128m  -XX:+UseConcMarkSweepGC  -XX:+UseParNewGC   -XX:ParallelGCThreads=2 -Djava.security.egd=file:/dev/./urandom
    tty: true
    stdin_open: true

  TokenValidationService:
    image: ${registry_url}/auth-tokenvalidation:${auth_version}
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.hostname_override: container_name
      environment_name: ${env_shortcode}
      service_name: TokenValidationService
      project.service.name: token-validation-service
      project.name: cis-auth
      project.stack: auth
      io.rancher.container.hostname_override/sjiveson/: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      environment_name: ${env_shortcode}
      service_name: $${service_name}
      io.rancher.scheduler.affinity:host_label: stackType=auth
    mem_limit: 1572864000
    volumes:
    - /var/log/iam:/var/log/iam
  #  - /home/rancher/env_config/${env_shortcode}/authServices.properties:/home/iam_user/careidconfig/authServices.properties
    tty: true
    stdin_open: true
    environment:
      ENV_SHORTCODE: ${env_shortcode}
      JAVA_OPTS: -server -Xms256m -Xmx512m  -XX:NewSize=128m   -XX:MaxNewSize=256m   -XX:PermSize=64m  -XX:MaxPermSize=128m  -XX:+UseConcMarkSweepGC  -XX:+UseParNewGC   -XX:ParallelGCThreads=2 -Djava.security.egd=file:/dev/./urandom

  haproxy-internal:
    ports:
      - 80:80
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      environment_name: ${env_shortcode}
      service_name: haproxy-internal
      project.service.name: haproxy-internal
      project.name: cis-auth
      project.stack: auth
    environment:
      - vip=0.0.0.0
      - be_atn=authenticatorservice.auth-local.rancher.internal
      - be_sml=samlservice.auth-local.rancher.internal
      - be_tvs=tokenvalidationservice.auth-local.rancher.internal
      - be_pot=portal.auth-local.rancher.internal
      - envcode=${env_shortcode}
    image: ${registry_url}/auth-haproxy-int:latest
    tty: true
    stdin_open: true
    cap_add:
    - SYS_ADMIN
    security_opt:
    - seccomp:unconfined

  Portal:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      service_name: $${service_name}
      environment_name: ${env_shortcode}
      service_name: Portal
      project.service.name: portal
      project.name: cis-auth
      project.stack: auth
    volumes:
    - /var/log/iam:/var/log/iam
    image: ${registry_url}/auth-portal:${auth_version}
    tty: true
    stdin_open: true
    environment:
      GLUSTER_URL: ${gluster_url}
      GLUSTER_FOLDER: ${env_shortcode}
      GLUSTER_PHOTOS: true
      GLUSTER_REPORTS: true
      JAVA_OPTS: -server -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=2 -Xms512m -Xmx1500m
    cap_add:
    - SYS_ADMIN
    security_opt:
    - seccomp:unconfined
    external_links:
    - cis-externals/Redis:RedisSessionStore

  djm:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      service_name: $${service_name}
      environment_name: ${env_shortcode}
      project.service.name: djm
      project.name: cis-auth
      project.stack: auth
    volumes:
    - /var/log/iam:/var/log/iam
    - /var/log/opendj:/opt/opendj/logs
    - /tmp/backup/opendj:/opt/opendj/bak
    image: ${registry_url}/opendj-s6:latest
    tty: true
    stdin_open: true
    environment:
      ENV_SHORTCODE: ${env_shortcode}
      REFERENCESERVER: dir.cis-externals.rancher.internal
      OPENDJ_BIND_USERNAME: ${ldap_auth_username}
      OPENDJ_BIND_PASSWORD: ${ldap_auth_password}
      OPENDJ_ROLE: DJM
      USE_AWS_S3:
      USE_AWS_S3_FOR_BACKUPS:
      OPENDJ_ENABLE_CHLOG: PLEASE
      HOSTNAME: djm.auth-local.rancher.internal
      S6_KEEP_ENV: 1
      S6_BEHAVIOUR_IF_STAGE2_FAILS: 1

  dfa:
    ports:
      - 10389:10389
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=ldap-dfa
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      service_name: $${service_name}
      environment_name: ${env_shortcode}
      project.service.name: dfa
      project.name: cis-auth
      project.stack: auth
    volumes:
    - /var/log/iam:/var/log/iam
    image: ${registry_url}/opendj-s6:latest
    tty: true
    stdin_open: true
    environment:
      ENV_SHORTCODE: ${env_shortcode}
      REFERENCESERVER: djm.auth-local.rancher.internal
      OPENDJ_BIND_USERNAME: ${ldap_auth_username}
      OPENDJ_BIND_PASSWORD: ${ldap_auth_password}
      OPENDJ_BACKUP_SOURCE: ${s3_bucket_name}
      OPENDJ_BACKUP_FILE: ${env_shortcode}-backup.tar.gz
      USE_AWS_S3: ${use_aws_s3}
      OPENDJ_ROLE: DFA
      OPENDJ_ENABLE_CHLOG: PLEASE
      OPENDJ_READONLY: PLEASE
      HOSTNAME: dfa.auth-local.rancher.internal
      S6_KEEP_ENV: 1
      S6_BEHAVIOUR_IF_STAGE2_FAILS: 2
    links:
    - djm:djm

  dex:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=ldap-dex
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      service_name: $${service_name}
      environment_name: ${env_shortcode}
      project.service.name: dex
      project.name: cis-auth
      project.stack: auth
    volumes:
    - /var/log/iam:/var/log/iam
    image: ${registry_url}/opendj-s6:latest
    tty: true
    stdin_open: true
    environment:
      ENV_SHORTCODE: ${env_shortcode}
      REFERENCESERVER: djm.auth-local.rancher.internal
      OPENDJ_BIND_USERNAME: ${ldap_auth_username}
      OPENDJ_BIND_PASSWORD: ${ldap_auth_password}
      OPENDJ_BACKUP_SOURCE: ${s3_bucket_name}
      OPENDJ_BACKUP_FILE: ${env_shortcode}-backup.tar.gz
      USE_AWS_S3: ${use_aws_s3}
      OPENDJ_ROLE: DEX
      OPENDJ_READONLY: PLEASE
      OPENDJ_ENABLE_CHLOG: PLEASE
      OPENDJ_EXTERNAL: PLEASE
      HOSTNAME: dex.auth-local.rancher.internal
      S6_KEEP_ENV: 1
      S6_BEHAVIOUR_IF_STAGE2_FAILS: 2
    links:
    - djm:djm

  haproxy-dex:
    ports:
      - 10389:10389
      - 8389:8389
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=ldap-dex
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      environment_name: ${env_shortcode}
      service_name: $${service_name}
      project.service.name: haproxy-dex
      project.name: cis-auth
      project.stack: auth
    volumes:
    - /home/rancher/${env_shortcode}:/mnt/gluster
    environment:
      vip: 0.0.0.0
      DEX_BE: dex.auth-local.rancher.internal
      pemfile: ${pemfile}
      cafile: root.pem
    image: ${registry_url}/auth-haproxy-dex:latest
    tty: true
    stdin_open: true
    cap_add:
    - SYS_ADMIN
    security_opt:
    - seccomp:unconfined

  changelog:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      service_name: $${service_name}
      project.service.name: changelog
      project.name: cis-auth
      project.stack: auth
      environment_name: ${env_shortcode}
    environment:
      HOSTNAME: ${changelog_hostname}
      CHANGELOG_PUBLISHER_PASSWORD: ${changelog_publisher_password}
      CHANGELOG_LOGS_RETENTION: ${changelog_logs_retention}
      S6_KEEP_ENV: 1
      S6_BEHAVIOUR_IF_STAGE2_FAILS: 2
    image: ${registry_url}/changelog:${auth_version}
    hostname: changelog
    volumes:
    - /var/log/iam:/var/changelog

  changelog-cleanser:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      service_name: $${service_name}
      project.service.name: changelog
      project.name: cis-auth
      project.stack: auth
      environment_name: ${env_shortcode}
    environment:
      HOSTNAME: ${changelog_hostname}
      CHANGELOG_PUBLISHER_PASSWORD: ${changelog_publisher_password}
      CHANGELOG_LOGS_RETENTION: ${changelog_logs_retention}
      S6_KEEP_ENV: 1
      S6_BEHAVIOUR_IF_STAGE2_FAILS: 2
    image: ${registry_url}/changelog-cleanser:${auth_version}
    hostname: changelog-cleanser
    volumes:
    - /var/log/iam:/var/changelog

  SessionTimeout:
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.hostname_override: container_name
      environment_name: ${env_shortcode}
      service_name: SessionTimeout
      project.service.name: session-timeout
      project.name: cis-auth
      project.stack: auth
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      environment_name: ${env_shortcode}
      service_name: $${service_name}
      io.rancher.scheduler.affinity:host_label: stackType=auth
    mem_limit: 1572864000
    volumes:
    - /var/log/iam:/var/log/iam
    tty: true
    stdin_open: true
    environment:
      redishosts: redis.cis-externals.rancher.internal:6379
    image: ${registry_url}/auth-sessiontimeout:${auth_version}
    tty: true
    stdin_open: true
    external_links:
    - cis-externals/Redis:RedisSessionStore

  S3FS:
    labels:
      environment_name: ${env_shortcode}
      io.rancher.container.pull_image: always
      service_name: S3FS
      project.service.name: s3fs
      project.name: cis-auth
      project.stack: auth
      io.rancher.scheduler.affinity:host_label_soft: stackType=ldap-dex
    cap_add:
      - SYS_ADMIN
      - MKNOD
    privileged: true
    devices:
      - "/dev/fuse"
    environment:
      BUCKETNAME: "${aws_account_id}-cis-data -o nonempty -o iam_role=${env_shortcode}-${tag_name}-ecsFromRancher"
      UID: "500"
      GID: "500"
    volumes:
    - "/home/rancher:/home/shared/s3:shared"
    tty: true
    stdin_open: true
    image: "camptocamp/s3fs:1.80-2"
